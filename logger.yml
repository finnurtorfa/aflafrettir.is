version: 1
disable_existing_loggers: False
formatters:
  simple:
    format: "[%(levelname)s: %(name)s: %(asctime)s] \t %(message)s"

filters:
  debug: 
    '()': app.LevelFilter
    'level': 10
  info: 
    '()': app.LevelFilter
    'level': 20
  warning:
    '()': app.LevelFilter
    'level': 30
  error: 
    '()': app.LevelFilter
    'level': 40
  critical: 
    '()': app.LevelFilter
    'level': 50

handlers:
  console:
    class: logging.StreamHandler
    level: ERROR
    formatter: simple
    stream: ext://sys.stdout

  debug_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG            
    formatter: simple
    filename: log/debug.log
    filters: [debug]
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8
    

  info_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: INFO            
    formatter: simple
    filename: log/info.log
    filters: [info]
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8

  warning_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: WARNING            
    formatter: simple
    filename: log/warning.log
    filters: [warning]
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8

  error_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: ERROR            
    formatter: simple
    filename: log/errors.log
    filters: [error]
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8
      
  critical_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: CRITICAL            
    formatter: simple
    filename: log/critical.log
    filters: [critical]
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8

loggers:
  my_error:
    level: ERROR
    handlers: [console]
    propagate: no

root:
  level: DEBUG
  handlers: [console, debug_file_handler, info_file_handler, warning_file_handler, error_file_handler, critical_file_handler]
